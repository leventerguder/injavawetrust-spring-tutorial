<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd ">


	<bean id="employeeService" class="_35.aspectj.service.EmployeeService" />
	<bean id="auditServiceAspectId" class="_35.aspectj.service.AuditServiceAspect" />

	<aop:config>
		<aop:aspect id="myaspect" ref="auditServiceAspectId">

			<!-- Before -->
			<!--It is valid too! --> 
			<!-- 
			<aop:pointcut id="pointCutBeforeId" expression="execution(* _35.aspectj.service.EmployeeService.saveEmployee(..))" />
			-->
			
			<aop:pointcut id="pointCutBeforeId" expression="execution(* *.saveEmployee(..))" />
			<aop:before method="logBefore" pointcut-ref="pointCutBeforeId" />

			<!-- After -->
			<aop:pointcut id="pointCutAfterId" expression="execution(* *.updateEmployee(..))" />
			<aop:after method="logAfter" pointcut-ref="pointCutAfterId" />
			
			<!-- AfterReturning -->
			<aop:pointcut id="pointCutAfterReturningId" expression="execution(* *.getEmployeeId(..))" />
			<aop:after-returning method="logAfterReturning" returning="resultValue" pointcut-ref="pointCutAfterReturningId" />
			
			<!-- AfterThrowing -->
			<aop:pointcut id="pointCutAfterThrowingId" expression="execution(* *.deleteEmployee(..))" />
			<aop:after-throwing method="logAfterThrowing" throwing="thrownException" pointcut-ref="pointCutAfterThrowingId"  />
			
			<!-- Around -->
   			<aop:pointcut id="pointCutAround" expression="execution(* *.getAllEmployees(..))" />
			<aop:around method="logAround" pointcut-ref="pointCutAround"  />
			
		</aop:aspect>
	</aop:config>

</beans>
